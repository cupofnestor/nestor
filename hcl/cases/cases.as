package com.nestor.hcl.cases {		import flash.display.MovieClip;	import flash.events.*;	import flash.net.*;	import flash.display.Loader;	import flash.display.NativeWindow;		import flash.utils.Timer;	import com.nestor.elements.kiosk;	import flash.ui.Mouse;	import flash.display.StageDisplayState;	import flash.display.Stage;			public class cases extends kiosk {		var cfg:XML;		var list_mc:caseList;		var phpLoader:MovieClip		var timeout:Timer;		var att_mc:att;		var wait:Number;				public function cases() {						var cfgLoader:URLLoader = new URLLoader();			cfgLoader.addEventListener(Event.COMPLETE, cfgLoaded);			cfgLoader.load(new URLRequest("cases_conf.xml"));			items_mc.addEventListener("itemFocus",itemFocusHandler);			//items_mc.addEventListener("itemBlur",itemBlurHandler);			trace("Constructor");		}								function addAttract():void		{			att_mc = new att();			addChild(att_mc);			att_mc.addEventListener(MouseEvent.MOUSE_UP, killAttract);			///timeout=new Timer(380000,1);			timeout=new Timer(wait,1);			timeout.addEventListener(TimerEvent.TIMER_COMPLETE, mytimeoutHandler);					}				function mytimeoutHandler(t:TimerEvent):void		{			timeout.stop();			timeout=null;			blurb.alpha=0;			items_mc.resetItems();			list_mc.swoopOff();			addAttract();					}				function killAttract(m:MouseEvent):void		{			timeout.start();			removeChild(att_mc);			att_mc=null;			list_mc.swoopOn();								}				function cfgLoaded(e:Event):void		{   			cfg=new XML(e.target.data);  			//trace(cfg);			var PHPgateway:String="http://"+cfg.net.host+":"+cfg.net.amfphp.port+cfg.net.amfphp.gateway;			items_mc.serverPre="http://"+cfg.net.host+cfg.net.path;			phpLoader = new amfPHPLoader(PHPgateway);			//trace(PHPgateway);			phpLoader.goGet("cases.getCases",[]);			phpLoader.addEventListener(Event.COMPLETE, casesLoadDone);			wait=cfg.wait;						stage.nativeWindow.alwaysInFront = true;			stage.displayState=StageDisplayState.FULL_SCREEN;			if(cfg.mouse=="false")			{				/*stage.nativeWindow.activate();				stage.nativeWindow.orderToBack();				stage.nativeWindow.orderToFront();				Mouse.hide();*/				hideMouse();			}						addAttract();		}				function casesLoadDone(e:Event):void		{			phpLoader.removeEventListener(Event.COMPLETE, casesLoadDone);			trace("Loader:  "+e.target.d);			list_mc=new caseList(e.target.d.serverInfo.initialData);			addChildAt(list_mc,1);			list_mc.addEventListener("swapItems", swapItems);					}						function swapItems(e:Event):void		{			if (blurb.alpha!=0)blurb.alpha=0;			trace("Target: "+e.target);			phpLoader.goGet("cases.getItems",[e.target.dID]);			phpLoader.addEventListener(Event.COMPLETE, itemsLoadDone);			timeout.stop();			timeout.reset();			timeout.start();		}				function itemsLoadDone(e:Event)		{			var aCase:Array=new Array();			trace("Items Loaded"+e.target.d);			for each (var i in e.target.d)			{				aCase.push(i.serverInfo.initialData);			}			trace(aCase);			items_mc.swapCase(aCase);		}				private function itemFocusHandler(e:Event):void		{			list_mc.swoopOff();			items_mc.addEventListener("resetCases", resetCasesHandler);		}				private function resetCasesHandler(e:Event):void		{			blurb.alpha=0;			items_mc.resetItems();			list_mc.swoopOn();			timeout.stop();			timeout.reset();			timeout.start();		}	}	}