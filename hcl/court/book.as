package  com.nestor.hcl.court {		import caurina.transitions.*;	import flash.events.*;	import flash.display.MovieClip;	public class book extends MovieClip	{		public static var PAGE_CHANGED:String = "PageChanged";		var maxRows:Number = 5;		//var temp:Number = 16;		var currentP:Number;		var lastP:Number;		var pageW:Number;		var tran:String="easeOutSine";		public var host:String;		public var path:String;					public function book() 			{				this.buttonMode = true;				this.useHandCursor = true;							}						public function init(toc:Array):void			{				trace("TOC_LENGTH= "+toc.length);				for(var i=0; i<toc.length; i++)					{						var item:MovieClip = new listItem(toc[i]);						item.host = this.host;						item.path = this.path;						pages.addChild(item);						var row:Number = (i%maxRows);						item.y = row*item.height						var div:Number=i/5;						var col:Number = Math.floor(div);						//trace("i="+i+"/Col="+col+"/Row "+row);						item.x = col*item.width;											}					currentP=0;					lastP=col;					pageW=item.width;					trace("Lastpage="+lastP+"pageW="+pageW);			}															public function nextP():void			{							if (currentP!=lastP)				{					var newPosition = -((currentP+1)*pageW);					Tweener.addTween(pages, {x:newPosition, time:1, transition:"easeOutSine"});					trace("Going to next!"+" Currentpage="+currentP+"  newPosition="+newPosition);					currentP+=1;					trace("Dispatching PAGE_CHANGED...currentP= "+currentP);					dispatchEvent(new Event(PAGE_CHANGED));				}				else{sameP();}			}						public function prevP():void			{				if (currentP!=0)				{					var newPosition = -((currentP-1)*pageW);					Tweener.addTween(pages, {x:newPosition, time:1, transition:"easeOutSine"});					trace("Going to previous!"+" Currentpage="+currentP+"  newPosition="+newPosition);					currentP-=1;					trace("Dispatching PAGE_CHANGED...currentP= "+currentP);					dispatchEvent(new Event(PAGE_CHANGED));				}				else				{					sameP();				}			}						public function sameP():void			{					var newPosition = -(currentP*pageW);					Tweener.addTween(pages, {x:newPosition, time:1, transition:"easeOutSine"});					trace("Going to same!"+" Currentpage="+currentP+"  newPosition="+newPosition);					trace("Dispatching PAGE_CHANGED...currentP= "+currentP);					dispatchEvent(new Event(PAGE_CHANGED));			}	}	}