package{		import flash.display.MovieClip;	import flash.events.*		public class control extends MovieClip	{			var mOffset:Number;		var tOffset:Number;		var thresh:Number=30;		var deltaX:Number=0;		var _frame:Number;		var changeX:Number=0;		var page:Number=1;				public function control()		{						tOffset=90;			wheel.gotoAndStop(tOffset);			wheel.stop();			wheel.addEventListener(MouseEvent.MOUSE_DOWN, beginDrag);			pageNo.text="1";			pageOf.text="1";					}				public function changePage(_newPage:Number):void		{			pageNo.text=_newPage.toString();		}				function beginDrag(e:Event):void		{									mOffset=wheel.mouseX; //initial mouse position						wheel.removeEventListener(MouseEvent.MOUSE_DOWN, beginDrag);						wheel.addEventListener(MouseEvent.MOUSE_UP, endDrag);			wheel.addEventListener(MouseEvent.MOUSE_OUT, flip);			wheel.addEventListener(MouseEvent.MOUSE_MOVE, turn);			trace("beginDrag, mOffset="+mOffset);								}				function endDrag(e:Event):void		{			deltaX=0;			wheel.removeEventListener(MouseEvent.MOUSE_MOVE, turn);			wheel.removeEventListener(MouseEvent.MOUSE_UP, endDrag);			wheel.removeEventListener(MouseEvent.MOUSE_OUT, flip);			wheel.addEventListener(MouseEvent.MOUSE_DOWN, beginDrag);						tOffset=wheel.currentFrame;			dispatchEvent(new Event("abort"));		}				function flip(e:Event):void		{						dispatchEvent(new Event("flip"));			deltaX=0;			wheel.removeEventListener(MouseEvent.MOUSE_MOVE, turn);			wheel.removeEventListener(MouseEvent.MOUSE_UP, endDrag);			wheel.removeEventListener(MouseEvent.MOUSE_OUT, flip);			wheel.addEventListener(MouseEvent.MOUSE_DOWN, beginDrag);						tOffset=wheel.currentFrame;			//debug.text=page.toString();		}				function turn(e:Event):void		{				changeX=deltaX;				 				//debug.text=deltaX.toString();				deltaX=Math.round(wheel.mouseX-mOffset)				changeX=deltaX-changeX;				var position:Number=tOffset+deltaX;				position=wrapWheel(position);				wheel.gotoAndStop(position);				dispatchEvent(new Event("wheel"));				trace(changeX);		}		function wrapWheel(n:Number):Number		{			var returns:Number;			if(n>=wheel.totalFrames)returns=0;			else if (n<=0)returns=wheel.totalFrames;			else returns=n;			return returns;		}			}	}