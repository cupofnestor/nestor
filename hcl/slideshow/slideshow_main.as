package com.nestor.hcl.slideshow  {		import flash.display.MovieClip;	import com.nestor.tools.cfgloader;	import flash.events.*;	import com.nestor.elements.kiosk;	import flash.display.*;	import flash.display.NativeWindow;		import flash.html.HTMLLoader;    import flash.net.URLRequest;	import flash.display.Loader;	import com.nestor.hcl.slideshow.showList;	import fl.video.VideoPlayer;	import fl.video.VideoScaleMode;		public class slideshow_main extends kiosk {		private var c:XML;		private var www,templates,bg,shows:String;		private var l:showList;		private var sshow:show;		private var btnType="crime_btn"		private var typeID:Number;		//private var altSWF:String;		//private var wide,high:Number;		private var att:MovieClip;		public function slideshow_main() {			// constructor code			var _c:cfgloader=new cfgloader('slideshow.cfg');			_c.addEventListener(Event.COMPLETE, setupShow);			//btnTest();					}				public override function init(e:Event):void		{			stage.addEventListener(KeyboardEvent.KEY_UP,shortcuts);			timeoutSet(5);			enableTimeout();					}				public override function timeoutHandler(e:Event):void		{			resetAll();			trace("Timeout HIT");		}				private function resetAll():void		{			var numC:Number = this.numChildren;			trace("Resetting: NumChildren: "+numC);			if (numC > 1)			{				trace("RemovingStuff");				for(var i:Number=1; i<numC;i++)				{					trace("Checking obj #"+i);					var obj:* = this.getChildAt(i);					if (obj is show){						trace("show found");						removeChild(obj);					}					if (obj is showList){						trace("list found");						awayList();					}				}			}			addAtt();		}				private function setupShow(e:Event):void		{			c=e.target.cfg;			www=c.net.www.toString();			templates=c.net.templates.toString();			bg=c.net.bg_img.toString();			typeID=Number(c.myTopic.@id);			initWindow();											}		private function initAtt(s:String):void		{						att=new MovieClip();			var vid:VideoPlayer=new VideoPlayer();			vid.scaleMode=VideoScaleMode.NO_SCALE;			vid.width=wide;			vid.height=high;			att.addChild(vid);			addChild(l);			addAtt();			vid.play(s);											}				private function killAtt(e:Event):void		{			//enableTimeout();			e.stopImmediatePropagation();			att.removeEventListener(MouseEvent.MOUSE_UP, killAtt);			enableTimeout();			trace("Clicked");			removeChild(att);			toList();		}				private function addAtt():void		{			att.addEventListener(MouseEvent.MOUSE_UP, killAtt);			disableTimeout();			addChild(att);			att.mouseEnabled=true;					}				private function initWindow() {				wide = Number(c.topics.topic.(@id == typeID).@W);				high = Number(c.topics.topic.(@id == typeID).@H);								stage.nativeWindow.width=wide;				stage.nativeWindow.height=high;				stage.nativeWindow.x=c.xoff;								trace("NativeWindow is :"+wide+" x "+high);				stage.displayState = toBool(c.fullscreen.toString()) ? StageDisplayState.FULL_SCREEN_INTERACTIVE : StageDisplayState.NORMAL;				stage.nativeWindow.alwaysInFront = toBool(c.fullscreen.toString());				stage.scaleMode = StageScaleMode.NO_SCALE;				stage.align = StageAlign.TOP_LEFT;				setupBG();				setupList();				initAtt(c.topics.topic.(@id == typeID).@attract.toString());				hideMouse();			        }				private function setupBG():void		{						var bgLdr:Loader=new Loader();						var bgUrl:String=www+templates+String(typeID)+"/"+bg;			trace("BG Image: "+bgUrl);			var bgReq:URLRequest=new URLRequest(bgUrl);			bgLdr.load(bgReq);			bgLdr.contentLoaderInfo.addEventListener(Event.COMPLETE, bgLoaded);					}				private function bgLoaded(e:Event):void		{			var ld:Loader = e.target.loader;						this.addChildAt(ld,0);			var tl:* = this.getChildAt(0);			trace("aDdedd");					}				private function setupList():void		{			l = new showList(c);			l.y=0;			l.hide();		}				private function clicked(m:Event):void		{			awayList();			(m.target.isSWF ) ? addSwf() : addShow(c, Number(m.target.id)); 					}				private function addShow(_c:XML,_i:Number):void		{			trace("Adding Show:"+_i+" :: ");			var s:show=new show(_c, _i);			addChild(s);			s.addEventListener(Event.COMPLETE, showOut);		}				private function addSwf():void		{			var f:fingerprint = new fingerprint(c);			addChild(f);			f.addEventListener("removeME", swfOut);			trace("Load SWF");		}				private function showOut(e:Event):void		{			removeChild(e.target as show);			var goto:String = (l.oneShow) ? "addAtt" : "toList";			this[goto]();		}				private function swfOut(e:Event):void		{			removeChild(e.target as fingerprint);			var goto:String = (l.oneShow) ? "addAtt" : "toList";			this[goto]();		}								private function toList():void		{			trace("Function toList");			l.show();			l.addEventListener(MouseEvent.MOUSE_UP, clicked);		}				private function awayList():void		{			//removeChild(l);			trace("Function awayList");			l.hide();			l.removeEventListener(MouseEvent.MOUSE_UP, clicked);		}						private function toBool(val:*):Boolean		{			var ret:Boolean;			switch(val){				case "1":				case "true":				case "yes":					ret = true;					break;				case "0":				case "false":				case "no":					ret = false;					break;			}			return ret;		}	}	}