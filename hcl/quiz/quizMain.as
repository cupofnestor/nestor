package  com.nestor.hcl.quiz {	import flash.display.MovieClip;	import flash.display.NativeWindow;	import flash.display.NativeWindowInitOptions;	import flash.display.NativeWindowType;	import flash.display.Stage;	import flash.display.StageDisplayState;	import flash.desktop.NativeApplication;	import flash.text.*;	import com.nestor.tools.cfgloader;	import com.nestor.tools.phpQuery;	import flash.events.*;	import com.nestor.hcl.*;	import flash.display.StageAlign;	import flash.display.StageScaleMode;		public class quizMain extends MovieClip {		var appCfg:XML;		var picWin:NativeWindow;		var quiz:XML;		var www:String;		var media:String;		var query:String;		var list:qaList;		var pic:picLoader;		var pics:Array;				public function quizMain() {				loadCfg();		}				private function loadCfg(){				var cfgLoad:cfgloader=new cfgloader("quiz.cfg");				cfgLoad.addEventListener(Event.COMPLETE, init);		}				private function init(e:Event){				e.target.removeEventListener(Event.COMPLETE, init);				appCfg=e.target.cfg;				//trace(appCfg.picWin);								initWindow(new XML(appCfg.main));				initPicWin(new XML(appCfg.picWin));				initNet(new XML(appCfg.net));		}				private function initWindow(_cfg:XML) {				//this.stage.width = _cfg.width;               // this.stage.height = _cfg.height;								stage.displayState = toBool(_cfg.fullscreen.toString()) ? StageDisplayState.FULL_SCREEN : StageDisplayState.NORMAL;				stage.scaleMode = StageScaleMode.NO_SCALE;				stage.align = StageAlign.TOP_LEFT;				                }						private function initPicWin(_cfg:XML) {				var myCFG:XML=_cfg;				var opts:NativeWindowInitOptions = new NativeWindowInitOptions();                opts.type = NativeWindowType.NORMAL;				opts.resizable=false;				                picWin = new NativeWindow(opts);                picWin.title = "My New Window";                picWin.width = myCFG.width;                picWin.height = myCFG.height;				             																picWin.stage.displayState = toBool(myCFG.fullscreen.toString()) ? StageDisplayState.FULL_SCREEN : StageDisplayState.NORMAL;				picWin.stage.scaleMode = StageScaleMode.NO_SCALE;				picWin.stage.align = StageAlign.TOP_LEFT;								pic = new picLoader();				picWin.stage.addChild(pic);				picWin.activate();										}				private function initNet(_cfg:XML) {				www=_cfg.www.toString();				media=_cfg.media.toString();				query=_cfg.query.toString();				var php:phpQuery=new phpQuery(www+query);				php.addEventListener(Event.COMPLETE,phpLoaded);										}				private function phpLoaded(e:Event):void		{			quiz = e.target.vars;			var isset:Boolean = quiz[0][5];			//trace("name: "+quiz.row);									initPics();			/*			for each (var r:XML in quiz.row){				trace("ROW");				trace(r.image);			}*/		}				private function initList(_cfg:XML) {											list = new qaList(_cfg,quiz);				list.addEventListener(Event.CHANGE, flipPic);				addChild(list);				list.x=Number(_cfg.xoff);				list.y=Number(_cfg.yoff);								list.setup();								/*				var qa_mc = new qa(_cfg);				addChild(qa_mc);				qa_mc.x=_cfg.xoff;				qa_mc.y=_cfg.yoff;*/						}				private function initPics() {				pics = new Array();				for each (var s:String in quiz.row.image)				{					pics.push(www+media+s);					trace("An Image is at: "+www+media+s);				}				initList(new XML(appCfg.questions));		}				private function flipPic(e:Event):void		{			pic.loadIMG(pics[e.target.currentPage]);		}				private function toBool(val:*):Boolean		{			var ret:Boolean;			switch(val){				case "1":				case "true":				case "yes":					ret = true;					break;				case "0":				case "false":				case "no":					ret = false;					break;			}			return ret;		}	}			}