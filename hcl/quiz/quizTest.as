package  com.nestor.hcl {	import flash.display.MovieClip;	import flash.display.NativeWindow;	import flash.display.NativeWindowInitOptions;	import flash.display.NativeWindowType;	import flash.display.Stage;	import flash.display.StageDisplayState;	import flash.desktop.NativeApplication;	import flash.text.*;	import com.nestor.tools.cfgloader;	import com.nestor.tools.phpQuery;	import flash.events.*;	import com.nestor.hcl.*;		public class quiz extends MovieClip {		var appCfg:XML;		var picWin:NativeWindow;		var quiz:XML;		var www:String;		var media:String;		var query:String;		var list:qaList;				public function quiz() {				loadCfg();		}				private function loadCfg(){				var cfgLoad:cfgloader=new cfgloader("quiz.cfg");				cfgLoad.addEventListener(Event.COMPLETE, init);		}				private function init(e:Event){				e.target.removeEventListener(Event.COMPLETE, init);				appCfg=e.target.cfg;				//trace(appCfg.picWin);				initWindow();				initPicWin(new XML(appCfg.picWin));				initNet(new XML(appCfg.net));		}				private function initWindow() {                stage.nativeWindow.height = 768;                stage.nativeWindow.width = 1024;                }						private function initPicWin(_cfg:XML) {				var myCFG:XML=_cfg;				var opts:NativeWindowInitOptions = new NativeWindowInitOptions();                opts.type = NativeWindowType.NORMAL;                picWin = new NativeWindow(opts);                picWin.title = "My New Window";                picWin.width = myCFG.width;                picWin.height = myCFG.height;                picWin.activate();				var textTest:TextField=new TextField();				picWin.stage.addChild(textTest);				textTest.width=1024;				textTest.height=100; 				textTest.text="Lorem Ipsum, bitches";				picWin.stage.displayState = toBool(myCFG.fullscreen.toString()) ? StageDisplayState.FULL_SCREEN : StageDisplayState.NORMAL;		}				private function initNet(_cfg:XML) {				www=_cfg.www.toString();				media=_cfg.media.toString();				query=_cfg.query.toString();				var php:phpQuery=new phpQuery(www+query);				php.addEventListener(Event.COMPLETE,phpLoaded);										}				private function phpLoaded(e:Event):void		{			quiz = e.target.vars;			var isset:Boolean = quiz[0][5];			//trace("name: "+quiz.row);						initList(new XML(appCfg.questions));			/*			for each (var r:XML in quiz.row){				trace("ROW");				trace(r.image);			}*/		}				private function initList(_cfg:XML) {				list = new qaList(_cfg,quiz);				addChild(list);				list.x=Number(_cfg.xoff);				list.y=Number(_cfg.yoff);				list.pop(0);								/*				var qa_mc = new qa(_cfg);				addChild(qa_mc);				qa_mc.x=_cfg.xoff;				qa_mc.y=_cfg.yoff;*/		}						private function toBool(val:*):Boolean		{			var ret:Boolean;			switch(val){				case "1":				case "true":				case "yes":					ret = true;					break;				case "0":				case "false":				case "no":					ret = false;					break;			}			return ret;		}	}			}