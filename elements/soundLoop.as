package com.nestor.elements {	import flash.events.ProgressEvent;	import flash.events.Event;	import flash.events.IOErrorEvent;	import flash.media.Sound;	import flash.media.SoundChannel;	import flash.media.SoundTransform;	import flash.net.URLRequest;	import flash.display.Sprite;		public class soundLoop extends Sprite{		private var url:String;        private var sc:SoundChannel;		private var snd:Sound;		private var v:Number;		private var _v:Number;		private var offset:Number=0;		private var largo:Number;		public function soundLoop(my_url:String = "sound.mp3", _volume:Number = 1) {			// constructor code			_v=_volume;			url=my_url;			var req:URLRequest = new URLRequest(url);            snd = new Sound();            snd.addEventListener(Event.COMPLETE, completeHandler);            snd.addEventListener(Event.ID3, id3Handler);            snd.addEventListener(IOErrorEvent.IO_ERROR, ioErrorHandler);            snd.addEventListener(ProgressEvent.PROGRESS, progressHandler);            snd.load(req);            		}		public function startLoop():void		{			trace("::soundLoop:: startLoop!");			playSound();		}				public function randomOffset():void		{			offset=Math.random()*(largo/2);		}				private function resetOffset():void		{			offset=0;		}						public function stopLoop():void		{			trace("::soundLoop:: stop!");			sc.stop();		}				private function playSound():void{			trace("::soundLoop:: playing!");						sc=snd.play(offset,int.MAX_VALUE);			vol = _v ;			//sc = snd.play(0,1/*int.MAX_VALUE*/);		}				private function completeHandler(event:Event):void {            trace("completeHandler: " + event);			largo=snd.length;			dispatchEvent(event);        }        private function id3Handler(event:Event):void {            trace("id3Handler: " + event);        }        private function ioErrorHandler(event:Event):void {            trace("ioErrorHandler: " + event);        }        private function progressHandler(event:ProgressEvent):void {            //trace("progressHandler: " + event);        }				public function set vol(_v:Number):void		{			v=_v;			var tran:SoundTransform = sc.soundTransform;            tran.volume = v;            sc.soundTransform = tran;		}			}	}