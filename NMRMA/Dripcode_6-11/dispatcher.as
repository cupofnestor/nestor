//dispatcher.aspackage{    import flash.events.EventDispatcher;    import flash.events.Event;    public class dispatcher extends EventDispatcher{		public static const LOAD:String='load';		public static const LOADED:String='loaded';		public static const FINISHED:String='finished';		public static const DEAD:String='dead';						        private var label:String;        public function dispatcher(label:String){            this.label = label;			        }        public override function toString():String{            return "[ Dispatcher "+label+" ]";        }				public function doLoad():void{            this.dispatchEvent(new Event(dispatcher.LOAD,true,false));        }		        public function loaded():void{            this.dispatchEvent(new Event(dispatcher.LOADED,true,false));        }				 public function finished():void{            this.dispatchEvent(new Event(dispatcher.FINISHED,true,false));        }				public function dead():void{            this.dispatchEvent(new Event(dispatcher.DEAD,true,false));        }    }}