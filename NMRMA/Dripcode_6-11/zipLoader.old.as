 package{	import flash.net.*;	import flash.display.*;	import flash.events.*;	import caurina.transitions.*; 	public class zipLoader extends MovieClip	{		var server:String = "http://map-server.local"		//var server:String = "http://localhost:8080";		//var server:String = "http://192.168.1.124:8080";		var phpFile:String = server+"/dripcode/zip.php";		var request:URLRequest = new URLRequest(phpFile);		var phpVars:URLVariables = new URLVariables();		var map:MovieClip = new MovieClip();		public var zipCode:String;		public var huc:String;		public var reg:String;		public var huc_name:String;		public var reg_name:String;		var dLoaded:dispatcher = new dispatcher("zipLoader");		public function zipLoader(_zipCode:String):void		{			zipCode = _zipCode;			request.method = URLRequestMethod.POST;			callServer();		}			private function callServer():void		{			//trace("calling");			phpVars.zip = zipCode;			request.data = phpVars;			    	  //  navigateToURL(request)			var loader:URLLoader = new URLLoader();			loader.dataFormat = URLLoaderDataFormat.VARIABLES;			loader.addEventListener(Event.COMPLETE, serverResponse);			loader.addEventListener(IOErrorEvent.IO_ERROR, ioErrorHandler);			loader.addEventListener(HTTPStatusEvent.HTTP_STATUS, httpStatusHandler);			loader.load(request);					}		private function serverResponse(e:Event):void		{			var mapLoaded:Function = function mapLoaded(e:Event):void						{				var map_img:Bitmap = e.target.content as Bitmap;				map.addChild(map_img);				addChild(map);				map.alpha=0;				Tweener.addTween( map, {alpha:1, time:2, transition:"easeOutExpo",onComplete:loaded_handler});				huc_name = stripSpaces(huc_name);				//huc_name = huc_name.split(".").join("");				//watershedName.text="You live in the "+huc_name+" Watershed!";							}			var mapProgress:Function = function mapProgress(e:ProgressEvent):void			{				//trace(e.bytesLoaded+" of "+e.bytesTotal+" bytes loaded.");			}			trace("DataFormat="+e.target.dataFormat);			huc_name = e.target.data.huc_name;			huc = e.target.data.huc;			reg = e.target.data.reg;			reg_name = e.target.data.reg_name;			var imgURL:String = e.target.data.imgURL;			//trace("imgURL="+imgURL+" name is "+huc_name);			var mapLoader:Loader = new Loader();			mapLoader.contentLoaderInfo.addEventListener(Event.COMPLETE,mapLoaded);			mapLoader.contentLoaderInfo.addEventListener(ProgressEvent.PROGRESS,mapProgress);			var mapRequest:URLRequest = new URLRequest(server+imgURL);			mapLoader.load(mapRequest);		}				 private function ioErrorHandler(event:IOErrorEvent):void {			 trace("whoops");            trace("ioErrorHandler: "+ event);        }				private function httpStatusHandler(event:HTTPStatusEvent):void 		{            trace("httpStatusHandler: " + event);            trace("status: " + event.status);        }				function stripSpaces (input:String):String		{			var newString:String = "";			for (var j:Number=0; j<input.length; j++) 			{				if (input.charAt(j)!=".") 				{					newString += input.charAt(j);				}				else break;			}		return newString;		}				function loaded_handler():void		{			dLoaded.loaded();		}			}			}