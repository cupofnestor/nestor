 package{	import flash.net.*;	import flash.display.*;	import flash.events.*;	import caurina.transitions.*; 	import flash.utils.Timer;		public class zipLoader extends MovieClip	{		//var server:String = "http://map-server.local"		//var server:String = "http://10.111.2.102:8080";		var server:String = "http://localhost:8080";		//var server:String = "http://192.168.1.124:8080";		//var phpFile:String = server+"/dripcode/zip.php";		//var server:String="http://10.111.2.102:8080";		var phpFile:String = server+"/dripcode/zip.php";		var request:URLRequest = new URLRequest(phpFile);		var phptimeout:Number= 60000; //one minute		var phpVars:URLVariables = new URLVariables();		var map:MovieClip = new MovieClip();		public var zipCode:String;		public var huc:String;		public var reg:String;		public var huc_name:String;		public var reg_name:String;		public var errMsg:String;		var phpT:Timer;		var dLoaded:dispatcher = new dispatcher("zipLoader");				public function zipLoader():void		{								}		public function zipLoad(_zipCode:String):void		{			trace("REquest="+phpFile);			zipCode = _zipCode;			request.method = URLRequestMethod.POST;			var zipNum = Number(zipCode);			(zipNum >= 501) ? callServer() : invalid();					}			private function callServer():void		{			trace("calling");			phpVars.zip = zipCode;			request.data = phpVars;			    	  //  navigateToURL(request)			var loader:URLLoader = new URLLoader();			loader.dataFormat = URLLoaderDataFormat.VARIABLES;			loader.addEventListener(Event.COMPLETE, serverResponse);			loader.load(request);			phpT = new Timer(phptimeout, 1);			phpT.addEventListener(TimerEvent.TIMER_COMPLETE, php_max_execution);			phpT.start();					}				private function invalid():void		{						errMsg = "Please enter a Valid Zip Code";			trace(errMsg);			dispatchEvent(new Event("reset"));		}				private function php_max_execution(t:TimerEvent):void		{			phpT.removeEventListener(TimerEvent.TIMER_COMPLETE, php_max_execution);			phpT.stop();						errMsg = "The Server has Timed out, Please try again."			dispatchEvent(new Event("reset"));		}		private function serverResponse(e:Event):void		{						 var mapLoaded:Function = function mapLoaded(e:Event):void				{					var map_img:Bitmap = e.target.content as Bitmap;					map.addChild(map_img);					addChild(map);					map.alpha=0;					Tweener.addTween( map, {alpha:1, time:2, transition:"easeOutExpo",onComplete:loaded_handler});						huc_name = stripSpaces(huc_name);					//huc_name = huc_name.split(".").join("");					//watershedName.text="You live in the "+huc_name+" Watershed!";									}			 var mapProgress:Function = function mapProgress(e:ProgressEvent):void				{					//trace(e.bytesLoaded+" of "+e.bytesTotal+" bytes loaded.");				}			phpT.reset();			phpT.removeEventListener(TimerEvent.TIMER_COMPLETE, php_max_execution);						if(e.target.data.err)			{				trace("ERROR LOADING ZIPCODE: "+ e.target.data.err);				errMsg = e.target.data.err;				dispatchEvent(new Event("reset"));			}									else			{				trace("SUCCESS LOADING ZIPCODE: "+e.target.data);				huc_name = e.target.data.huc_name;				huc = e.target.data.huc;				reg = e.target.data.reg;				reg_name = e.target.data.reg_name;				var imgURL:String = e.target.data.imgURL;				trace("imgURL="+e.target.data.imgURL+" name is "+huc_name);				var mapLoader:Loader = new Loader();				mapLoader.contentLoaderInfo.addEventListener(Event.COMPLETE,mapLoaded);				mapLoader.contentLoaderInfo.addEventListener(ProgressEvent.PROGRESS,mapProgress);				var mapRequest:URLRequest = new URLRequest(server+imgURL);				trace("Maprequest="+server+imgURL);				mapLoader.load(mapRequest);			}		}						function stripSpaces (input:String):String		{			var newString:String = "";			for (var j:Number=0; j<input.length; j++) 			{				if (input.charAt(j)!=".") 				{					newString += input.charAt(j);				}				else break;			}		return newString;		}				function loaded_handler():void		{			dLoaded.loaded();		}							}			}